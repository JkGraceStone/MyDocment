1.DataSet.Tables[tableName].Rows[index][colName]
2.Id = ds.Table[0].Rows[0].Column[0]


=======================
对数据库的理解：
sqlserver数据库，是一个带有服务器功能的数据库。他的功能很强大。我们是可以通过网络去链接到远程的数据库。


sqlite是手机中使用的一个很轻量级的数据库。它的db文件其实就是数据库，没有服务。只是一个文件数据库。我们只用建好数据库后，把数据库放到我们的对应位置，connectionString="Data Source=cater.db;Version=3;"cater.db所以这个就是我们的数据库了，非常的简单。



对比sqlserver和sqlite的数据库连接字符串上去理解，就知道我们的数据库。


//数据库：要做的事情首先是sql语句的熟悉和各种熟练的拿到数据。其他的事务太简单了。。。。
关注在sql语句上，而不是其他的各种狗屁东西。
当然数据库，肯定要有数据的：存储，共享等。但是我们最开始应该关注的焦点应该是sql语句的熟练啊，不是么，搞那么多幺蛾子干啥。

===========================
ORM只是个OOP（面向对象编程）与RDB（关系型数据库）相互妥协的怪胎，纠结个P...等将来RDB被淘汰了，你们就不蛋疼了...
model最大的好处是可以把参数封装在一个类里,可以在其他层使用,而且结合泛型,可以定义强类型的集合.


============================
论坛里的一个问题：最近看到别人培训的时候讲到了三层架构，即常用的表现层+DAL+BLL+MODEL，其中有个问题百思不得其解。model用来封装传递的数据对象，简单来说就是映射数据表。这个做法在java里面再普通不过了，因为这个model或是pojo对象吧，是作为数据持久化保存而存在的，非常容易理解。但是在.net中，DataSet，DataTable本身就已经封装的非常出色了，为什么还要将其中的数据放入到Model中呢？直接使用DataSet不可以么？？这么做是处于什么原理才这么搞的呢？初看这种做法的时候，偶非常的崩溃，纯粹是多做了一步么；
1.DataSet.Tables[tableName].Rows[index][colName]
2.Id = ds.Table[0].Rows[0].Column[0]
这样的方式可以取到任何值。

这里他应该是忽略了，dal层要向bal层返回的是我们的对象，而不是去给返回一个datatable或者dataset。
还有datatable和dataset非常的臃肿，不适合使用，这也是很要命的地方。所以一定要这样去做。




（如果当时我们用的数据库是sqlite去做我们的数据库实验，没有那么多的环境困扰的话，相信我们的sql语句能力在当年就非常的牛逼了，这就是很多时候，教学环境决定我们的学习有多么的困难。当年那个时候采用sqlserver，连环境都配置不好，而且不是一两次配置不好，没有人指导，最终的结果，就是大家都没有学习热情和自信，都不爱学习。真的很悲催。。。。。即使是当时使用mysql也好，然后配上我们的navicat就非常的牛了。真是觉得我们当时的学习，都浪费给环境了。同样这次我带他们实训，我知道了sqllite这种东西，那么我可以每天都联系sql语句的书写，这个是软件开发者最最重要的核心技能。很多时候，一定要知道核心在哪里。要知道自己畏惧的难点在哪里。这就是我本次实训十天以来，在技术上最有收获的地方。不要浪费太多时间在环境的摸索之上。非常的不划算。。。
）1.每天都要总结哦，不然你都不知道自己的各个方面的长进在哪里，不知道自己每天成功的做成了那些事情。



以后的数据库实验都可以在sqlite上去做，非常好，这对你的技能会是一个非常大的提升。


了解c#或者c，或者vs都可以让我们在软件行业行走得更远。其实学习sqlserver都足够让我们对软件望而却步了，因为在我们心里，我们只是需要执行查询那么一条简单sql语句，就要和那么一个庞大的东西打交道，几个g的东西，而且各种服务没打开，各种链接不上数据库。每次安装不上，收费，还有王珊和萨师煊的那本书里用到的什么金仓数据库收费和使用次数，让我们觉得获得学习资源非常的匮乏，总之各种各样的人都在为难我们去专注我们应该做的事情。
mysql的命令行，让我们开始学习的时候，异常的头痛，先要学习那么多命令，才能操作我们的数据库。学习效率巨低。只有sqlite这样的东西更适合我们用来做试验用。



用oracle去学sql语句，就更他妈的瞎扯了，大炮打蚊子，就是这么low逼。当时给你讲sql的李刚。也是他妈的一个傻×，不是真正教我们编程或者oracle的。





=============



